---
name: CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - {
              dir: "build_debug",
              build_type: "Debug"
            }
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: ‚§µÔ∏è Check out nanopb
        uses: actions/checkout@v2.3.4
        with:
          repository: nanopb/nanopb
          ref: nanopb-0.4.5
          path: 'nanopb_src'

      - name: Installing dependencies for local act
        if: ${{ env.ACT }}
        run: |
          apt update
          apt install -y cmake
          apt install -y build-essential

      - name: Installing common dependencies
        run: |
          apt install -y python3-protobuf protobuf-compiler

      - name: Setup build vars
        run: |
          echo '::set-output name=BUILD_DIR::${{ matrix.config.dir }}'
          echo '::set-output name=NANOPB_ROOT::'$(pwd)'/nanopb_src'
        id: build_vars

      - name: üèó Configure
        shell: bash
        run: |
          mkdir ${{ steps.build_vars.outputs.BUILD_DIR }}
          echo "ROOT: ${{ steps.build_vars.outputs.NANOPB_ROOT }}"
          ls ${{ steps.build_vars.outputs.NANOPB_ROOT }}
          cmake \
            -S . \
            -B ${{ steps.build_vars.outputs.BUILD_DIR }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DNANOPB_ROOT="${{ steps.build_vars.outputs.NANOPB_ROOT }}"

      - name: üöÄ Build
        shell: bash
        run: |
          cmake --build ${{ steps.build_vars.outputs.BUILD_DIR }}

      - name: Run tests
        shell: bash
        run: |
          cd ${{ steps.build_vars.outputs.BUILD_DIR }}
          ctest


